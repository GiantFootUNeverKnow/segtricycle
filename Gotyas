## From UVA 10400, I know that sometimes DFS can outrun BFS greatly because you don't need travel through all possibilities in some
## situations. When DFS reaches one of the solutions, it can terminate immediately while BFS has to spend long long time searching 
## no single solution.
## Also, from UVA 10400, I used repetitive trimming to speed up DFS. You record some states you have searched and skip that state whenever 
## you meet it again.

##From UVA 714, which I didn't AC, I learned a way to figure out the Least Largest Element problem --- Binary Search!
##,though it is not a key to all similar problems...

##UVA 10055, the simplest problem, taught me some things, cost me three WA...
##Always read the problem!
##abs() is different in <cstdlib> and <cmath>. If you do with int, go with cstdlib, otherwise, cmath is your favorite

##UVA 10718 is an awesome math problem. I already spent 2 hours coding the complicated bit operations, which I think there
##should be some packages easier to use. But, important points have to be made: bit operation maybe have higher priority than
##"==" or "!=". Be careful when doing comparison with bit operation. They cause unlimited problems

##UVA 11988 is the first exercise of data structure and it shows me a convenient data structure -- list. It can support a 
##front and back, push and pop, and anywhere modification/request. It just looks like a physical list.
