#include <iostream>
#include <vector>
#include <stdio.h>
#include <stdlib.h>
#include <algorithm>

using namespace std;
int main(){
//	freopen("in.txt","r",stdin);
	int n,cat;
	cin >> n;
	vector<int> partialSum;
	cin >> cat;
	partialSum.push_back(cat);
	for (int i = 1; i < n; i++){
		vector<int> newRow;
		for (int j = 0; j < i + 1; j++){
			cin >> cat;
			newRow.push_back(cat);
		}
		newRow[0] += partialSum[0];
		for (int j = 1; j < newRow.size()-1; j++){
			newRow[j] += max(partialSum[j],partialSum[j-1]);
		}
		newRow[newRow.size() - 1] += partialSum[partialSum.size() - 1];
		partialSum = newRow;
	}
	int maxRoute = 0;
	for (int i = 0; i < partialSum.size(); i++)
		if (partialSum[i] > maxRoute)
			maxRoute = partialSum[i];
	cout << maxRoute << endl;
	return 0;
}
