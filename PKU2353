#include <iostream>
#include <stdlib.h>
#include <stdio.h>
#include <cstring>
#include <string>
#include <algorithm>
#include <utility>
#include <climits>
#include <vector>
#include <iomanip>

using namespace std;

int fee[100][500];
int dp[100][500];
int prev_room[100][500];//1 means left, 2 means right, 3 means down

int main() {
	/*
	FILE * stream1, *stream2;
	freopen_s(&stream1, "Text.txt", "r", stdin);
	freopen_s(&stream2, "OUTPUT.txt", "w", stdout);*/
	int M, N;
	//cin >> M >> N;
	scanf("%d %d", &M, &N);
	for (int i = 0; i < M; i++)
		for (int j = 0; j < N; j++)
			scanf("%d", &fee[i][j]);
			//cin >> fee[i][j];
	for (int i = 1; i < M; i++)
		for (int j = 0; j < N; j++)
			dp[i][j] = LONG_MAX;
	for (int j = 0; j < N; j++) {
		dp[0][j] = fee[0][j];
		prev_room[0][j] = 3;
	}
	//init
	for (int i = 1; i < M; i++) {
		for (int j = 0; j < N; j++) {
			dp[i][j] = dp[i - 1][j] + fee[i][j];
			prev_room[i][j] = 3;
		}//update from down
		for (int j = N - 2; j >= 0; j--) 
			if (dp[i][j + 1] + fee[i][j] < dp[i][j]) {
				dp[i][j] = dp[i][j + 1] + fee[i][j];
				prev_room[i][j] = 2;
			}
		//update from right
		for (int j = 1; j < N; j++)
			if (dp[i][j - 1] + fee[i][j] < dp[i][j]) {
				dp[i][j] = dp[i][j - 1] + fee[i][j];
				prev_room[i][j] = 1;
			}
		//update from left
	}
	int minCost = LONG_MAX;
	int destRoom;
	for (int j = 0; j < N; j++)
		if (dp[M - 1][j] < minCost) {
			destRoom = j;
			minCost = dp[M - 1][j];
		}
	vector<int> s;
	int x = M - 1, y = destRoom;
	while (x) {//while not reaching floor
		s.push_back(y);
		if (prev_room[x][y] == 3)
			x--;
		else if (prev_room[x][y] == 2)
			y++;
		else
			y--;
	}
	cout << y+1 << endl;//output the number of room on the floor
	for (int i = s.size() - 1; i >= 0; i--)
		cout << s[i]+1 << endl;
	//collect stat and output
	return 0;
}
