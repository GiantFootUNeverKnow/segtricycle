#include <string>
#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <ctype.h>
#include <map> 

using namespace std;

// map each character to a boolean, needed
map<char,bool> caseStudy;
//this function is taken from IDcodes, UVaoj 146
bool discern(string & p){
	if (p.length() <= 1){
		return false;
	}
	else if (p.length() == 2){
		if (p[0] < p[1]){
			char tmp = p[0];
			p[0] = p[1];
			p[1] = tmp;
			return 1;
		}
		else return false;
	}
	else{
		string p2 = p.substr(1);
		if ( discern(p2) ) {
			p = p[0] + p2;
			return true;
			}
		bool ans = 0;
		char min = 'z' + 1;
		int posOfMin;
		for (int i = 1; i < p.length(); i++){
			if (p[i] > p[0] && p[i] < min){
				min = p[i];
				posOfMin = i;
				ans = 1;
			}
		}
		if (ans) 
		{
			char tmp = p[0];
			p[0] = min;
			p[posOfMin] = tmp;
			sort(p.begin() + 1, p.end());
		}
		return ans;
	}	
	//return 1;
}

void  generate(string s){
	int size = s.size();
	caseStudy.clear();
	for (int i = 0; i < size; i++){
		if (s[i] <= 'Z' && s[i] >= 'A')
		caseStudy.insert(make_pair(tolower(s[i]),1));//1 means uppercase
		else caseStudy.insert(make_pair(s[i],0));
		s[i] = tolower(s[i]);
	}		
	sort(s.begin(),s.end());
	//cout << s << endl;
	for (int i = 0; i < size; i++)
		if (caseStudy[s[i]]) putchar(toupper(s[i]));
		else putchar(s[i]);
	cout << endl;
	while ( discern(s) ){
	//	cout << s << endl;
		for (int i = 0; i < size; i++)
			if (caseStudy[s[i]]) putchar(toupper(s[i]));
			else putchar(s[i]);
		cout << endl;
	}
	cout << endl;
	return ;
}

int main(){
	int N;
	cin >> N;
	string str;
	for (int i =0; i < N; i++){
		cin >> str;
		generate(str);
	}
	return 0;
}
